'use strict';

import PropTypes from 'prop-types';
import React, { Component } from 'react';
import {
    requireNativeComponent,
    findNodeHandle,
    NativeModules,
} from 'react-native';

let RNPhotoBrowser = requireNativeComponent('RCTPhotoBrowser', null);
var Manager = NativeModules.PhotoBrowserManager;

export default class PhotoBrowser extends React.Component {
    static propTypes = {
        // 必需参数: 要现实的图片数据，二维数组，可以是URL地址，可以是本地图片名称..
        photos: PropTypes.array,

        // 非必须参数: 设置要跳转的位置，传参举例：{ 'section': '3', 'index':'5'}，表示要跳转到第三组第五张图片
        currentPosition: PropTypes.object,

        // 非必须参数: 当图片浏览器显示出来的时候触发
        onShow: PropTypes.func,
        // 非必须参数: 当切换图片是触发
        onDidChangePosition: PropTypes.func,

        // 滚动结束
        onEndChangePosition: PropTypes.func,
        // 非必须参数: 当单击某个图片的时候触发
        onDidSingleTapAtPosition: PropTypes.func,
        // 非必须参数: 当双击某个图片的时候触发
        onDidDoubleTapAtPosition: PropTypes.func
    }

    setNativeProps(nativeProps) {
        debugger
        this._root.setNativeProps(nativeProps);
    }

    setCurrentPosition(section, index) {
        Manager.setPhotoBrowserPosition(findNodeHandle(this), section, index);
    }

    resetPhotos(photos) {
        Manager.setPhotoBrowserPhotos(findNodeHandle(this), photos);
    }

    // 开始轮播图
    startCarousel() {
        Manager.startCarousel(findNodeHandle(this));
    }

    // 结束轮播图
    cancelCarousel() {
        Manager.cancelCarousel(findNodeHandle(this));
    }

    render() {
        return <RNPhotoBrowser {...this.props} ref={component => this._root = component}
            onShow={this.props.onShow}
            currentPosition={this.props.currentPosition}
            onDidChangePosition={this.props.onDidChangePosition}
            onEndChangePosition={this.props.onEndChangePosition}
            onDidSingleTapAtPosition={this.props.onDidSingleTapAtPosition}
            onDidDoubleTapAtPosition={this.props.onDidDoubleTapAtPosition} >
            {this.props.children}
        </RNPhotoBrowser>;
    }
}