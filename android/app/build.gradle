
apply plugin: "com.android.application"
import com.android.build.OutputFile

project.ext.react = [
    entryFile: "index.js"
]

apply from: "../../node_modules/react-native/react.gradle"
apply from: "../../node_modules/react-native-code-push/android/codepush.gradle"
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
def enableSeparateBuildPerCPUArchitecture = false

def enableProguardInReleaseBuilds = false
android {
    compileSdkVersion 26
    buildToolsVersion '26.0.0'

    defaultConfig {
        applicationId MYAPP_APPLICATIONID
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName '2.3.7.1'
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
	signingConfigs {
        release {
            storeFile file(MYAPP_RELEASE_STORE_FILE)
            storePassword MYAPP_RELEASE_STORE_PASSWORD
            keyAlias MYAPP_RELEASE_KEY_ALIAS
            keyPassword MYAPP_RELEASE_KEY_PASSWORD
        }
    }


    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86"
        }
    }
    buildTypes {
        debug {
            manifestPlaceholders = [k_appName : MYAPP_APP_NAME]
        }
        release {
            manifestPlaceholders = [k_appName : MYAPP_APP_NAME]
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
            buildConfigField "String", "CODEPUSH_KEY", '"GTt7jCVhn_-2tfsUX5qe4ssh8pLV08c6a238-8f8d-45eb-909b-40eaa02204ef"'
        }
        releaseStaging {
            buildConfigField "String", "CODEPUSH_KEY", '"XA-Il-HgefHGsK19NtRHNnFojlHl08c6a238-8f8d-45eb-909b-40eaa02204ef"'
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // oldName
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')){
                output.outputFile = new File(outputFile.parent, defaultConfig.applicationId+"_build"+MYAPP_APP_BUILD_NUMBER+".apk")
            }
        }
    }
    sourceSets { main { java.srcDirs = ['src/main/java', 'src/utility'] } }
}

dependencies {
    compile project(':react-native-code-push')
    compile project(':react-native-splash-screen')
    //compile project(':react-native-baidu-push')
    compile project(':react-native-share')
    compile project(':react-native-fetch-blob')
    compile project(':react-native-video')
    compile fileTree(include: ['*.jar'], dir: 'libs')
     compile 'com.android.support:appcompat-v7:25.0.0'
//    compile 'com.android.support:support-v7:25.0.0'
    compile 'com.facebook.react:react-native:+'
    compile 'com.facebook.stetho:stetho:1.3.1'
    compile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
    compile project(':react-native-sqlite-storage')
    compile project(':react-native-device-info')
    // compile project(':react-native-localization')
    compile project(':react-native-svg')

     compile 'com.facebook.fresco:fresco:1.5.0'
    // 如果你需要支持Android4.0(API level 14)之前的版本
    compile 'com.facebook.fresco:animated-base:1.5.0'
    // 如果你需要支持GIF动图
    compile 'com.facebook.fresco:animated-gif:1.5.0'
    // 如果你需要支持WebP格式，包括WebP动图
    compile 'com.facebook.fresco:animated-webp:1.5.0'
    compile 'com.facebook.fresco:webpsupport:1.5.0'
//    compile 'com.alipay.euler:andfix:0.5.0@aar'
    //支持office pdf video 文件打开
    compile 'com.google.code.gson:gson:2.6.2'
    compile project(':react-native-doc-viewer')
    compile project(':react-native-picker')
    compile project(':react-native-image-picker')
    compile project(':react-native-fs')
    compile project(':react-native-linear-gradient')
    compile project(':react-native-keep-awake')
    compile project(':react-native-vector-icons')
    compile project(':react-native-orientation')
    compile('com.github.chrisbanes.photoview:library:1.2.4')
            {
                exclude module: 'support-v4'
            }
    compile 'com.github.bumptech.glide:glide:4.7.1'
}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.0.0'
            }
        }
    }
}
// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}
